// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: carbonapi_v3_pb/carbonapi_v3_pb.proto

package carbonapi_v3_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilteringFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments []string `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *FilteringFunction) Reset() {
	*x = FilteringFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilteringFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilteringFunction) ProtoMessage() {}

func (x *FilteringFunction) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilteringFunction.ProtoReflect.Descriptor instead.
func (*FilteringFunction) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{0}
}

func (x *FilteringFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilteringFunction) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// Fetch Storage Capabilities
type CapabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CapabilityRequest) Reset() {
	*x = CapabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityRequest) ProtoMessage() {}

func (x *CapabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityRequest.ProtoReflect.Descriptor instead.
func (*CapabilityRequest) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{1}
}

// Storage capability information
type CapabilityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// carbonapi_v2_pb, carbonapi_v3_pb, etc.
	SupportedProtocols []string `protobuf:"bytes,1,rep,name=supportedProtocols,proto3" json:"supportedProtocols,omitempty"`
	// server name
	Name                      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	HighPrecisionTimestamps   bool   `protobuf:"varint,3,opt,name=highPrecisionTimestamps,proto3" json:"highPrecisionTimestamps,omitempty"`
	SupportFilteringFunctions bool   `protobuf:"varint,4,opt,name=supportFilteringFunctions,proto3" json:"supportFilteringFunctions,omitempty"`
	// true if storage will behave normally if request is splitted by maxGlobs
	LikeSplittedRequests bool `protobuf:"varint,5,opt,name=likeSplittedRequests,proto3" json:"likeSplittedRequests,omitempty"`
	SupportStreaming     bool `protobuf:"varint,6,opt,name=supportStreaming,proto3" json:"supportStreaming,omitempty"`
}

func (x *CapabilityResponse) Reset() {
	*x = CapabilityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityResponse) ProtoMessage() {}

func (x *CapabilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityResponse.ProtoReflect.Descriptor instead.
func (*CapabilityResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{2}
}

func (x *CapabilityResponse) GetSupportedProtocols() []string {
	if x != nil {
		return x.SupportedProtocols
	}
	return nil
}

func (x *CapabilityResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CapabilityResponse) GetHighPrecisionTimestamps() bool {
	if x != nil {
		return x.HighPrecisionTimestamps
	}
	return false
}

func (x *CapabilityResponse) GetSupportFilteringFunctions() bool {
	if x != nil {
		return x.SupportFilteringFunctions
	}
	return false
}

func (x *CapabilityResponse) GetLikeSplittedRequests() bool {
	if x != nil {
		return x.LikeSplittedRequests
	}
	return false
}

func (x *CapabilityResponse) GetSupportStreaming() bool {
	if x != nil {
		return x.SupportStreaming
	}
	return false
}

// Fetch Data
type FetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartTime int64  `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime  int64  `protobuf:"varint,3,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	// Should be true if our request requires more precision than seconds.
	HighPrecisionTimestamps bool                 `protobuf:"varint,4,opt,name=highPrecisionTimestamps,proto3" json:"highPrecisionTimestamps,omitempty"`
	PathExpression          string               `protobuf:"bytes,5,opt,name=pathExpression,proto3" json:"pathExpression,omitempty"`
	FilterFunctions         []*FilteringFunction `protobuf:"bytes,6,rep,name=filterFunctions,proto3" json:"filterFunctions,omitempty"`
	MaxDataPoints           int64                `protobuf:"varint,7,opt,name=maxDataPoints,proto3" json:"maxDataPoints,omitempty"`
}

func (x *FetchRequest) Reset() {
	*x = FetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest) ProtoMessage() {}

func (x *FetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest.ProtoReflect.Descriptor instead.
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{3}
}

func (x *FetchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FetchRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FetchRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *FetchRequest) GetHighPrecisionTimestamps() bool {
	if x != nil {
		return x.HighPrecisionTimestamps
	}
	return false
}

func (x *FetchRequest) GetPathExpression() string {
	if x != nil {
		return x.PathExpression
	}
	return ""
}

func (x *FetchRequest) GetFilterFunctions() []*FilteringFunction {
	if x != nil {
		return x.FilterFunctions
	}
	return nil
}

func (x *FetchRequest) GetMaxDataPoints() int64 {
	if x != nil {
		return x.MaxDataPoints
	}
	return 0
}

type MultiFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*FetchRequest `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *MultiFetchRequest) Reset() {
	*x = MultiFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFetchRequest) ProtoMessage() {}

func (x *MultiFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFetchRequest.ProtoReflect.Descriptor instead.
func (*MultiFetchRequest) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{4}
}

func (x *MultiFetchRequest) GetMetrics() []*FetchRequest {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Stop time can be computed by stepTime*len(values)
type FetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PathExpression    string  `protobuf:"bytes,2,opt,name=pathExpression,proto3" json:"pathExpression,omitempty"`
	ConsolidationFunc string  `protobuf:"bytes,3,opt,name=consolidationFunc,proto3" json:"consolidationFunc,omitempty"`
	StartTime         int64   `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime          int64   `protobuf:"varint,5,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	StepTime          int64   `protobuf:"varint,6,opt,name=stepTime,proto3" json:"stepTime,omitempty"`
	XFilesFactor      float32 `protobuf:"fixed32,7,opt,name=xFilesFactor,proto3" json:"xFilesFactor,omitempty"`
	// Should be true if timestamps have better precision than seconds.
	HighPrecisionTimestamps bool      `protobuf:"varint,8,opt,name=highPrecisionTimestamps,proto3" json:"highPrecisionTimestamps,omitempty"`
	Values                  []float64 `protobuf:"fixed64,9,rep,packed,name=values,proto3" json:"values,omitempty"`
	AppliedFunctions        []string  `protobuf:"bytes,10,rep,name=appliedFunctions,proto3" json:"appliedFunctions,omitempty"`
	RequestStartTime        int64     `protobuf:"varint,11,opt,name=requestStartTime,proto3" json:"requestStartTime,omitempty"`
	RequestStopTime         int64     `protobuf:"varint,12,opt,name=requestStopTime,proto3" json:"requestStopTime,omitempty"`
}

func (x *FetchResponse) Reset() {
	*x = FetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResponse) ProtoMessage() {}

func (x *FetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResponse.ProtoReflect.Descriptor instead.
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{5}
}

func (x *FetchResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FetchResponse) GetPathExpression() string {
	if x != nil {
		return x.PathExpression
	}
	return ""
}

func (x *FetchResponse) GetConsolidationFunc() string {
	if x != nil {
		return x.ConsolidationFunc
	}
	return ""
}

func (x *FetchResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FetchResponse) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *FetchResponse) GetStepTime() int64 {
	if x != nil {
		return x.StepTime
	}
	return 0
}

func (x *FetchResponse) GetXFilesFactor() float32 {
	if x != nil {
		return x.XFilesFactor
	}
	return 0
}

func (x *FetchResponse) GetHighPrecisionTimestamps() bool {
	if x != nil {
		return x.HighPrecisionTimestamps
	}
	return false
}

func (x *FetchResponse) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *FetchResponse) GetAppliedFunctions() []string {
	if x != nil {
		return x.AppliedFunctions
	}
	return nil
}

func (x *FetchResponse) GetRequestStartTime() int64 {
	if x != nil {
		return x.RequestStartTime
	}
	return 0
}

func (x *FetchResponse) GetRequestStopTime() int64 {
	if x != nil {
		return x.RequestStopTime
	}
	return 0
}

type MultiFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*FetchResponse `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *MultiFetchResponse) Reset() {
	*x = MultiFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiFetchResponse) ProtoMessage() {}

func (x *MultiFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiFetchResponse.ProtoReflect.Descriptor instead.
func (*MultiFetchResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{6}
}

func (x *MultiFetchResponse) GetMetrics() []*FetchResponse {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Find Metrics
type MultiGlobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics   []string `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	StartTime int64    `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime  int64    `protobuf:"varint,3,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
}

func (x *MultiGlobRequest) Reset() {
	*x = MultiGlobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGlobRequest) ProtoMessage() {}

func (x *MultiGlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGlobRequest.ProtoReflect.Descriptor instead.
func (*MultiGlobRequest) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{7}
}

func (x *MultiGlobRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MultiGlobRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MultiGlobRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

type GlobMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IsLeaf bool   `protobuf:"varint,2,opt,name=isLeaf,proto3" json:"isLeaf,omitempty"`
}

func (x *GlobMatch) Reset() {
	*x = GlobMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobMatch) ProtoMessage() {}

func (x *GlobMatch) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobMatch.ProtoReflect.Descriptor instead.
func (*GlobMatch) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{8}
}

func (x *GlobMatch) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GlobMatch) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

// request name to metrics
type GlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Matches []*GlobMatch `protobuf:"bytes,2,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *GlobResponse) Reset() {
	*x = GlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobResponse) ProtoMessage() {}

func (x *GlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobResponse.ProtoReflect.Descriptor instead.
func (*GlobResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{9}
}

func (x *GlobResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlobResponse) GetMatches() []*GlobMatch {
	if x != nil {
		return x.Matches
	}
	return nil
}

type MultiGlobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*GlobResponse `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *MultiGlobResponse) Reset() {
	*x = MultiGlobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiGlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiGlobResponse) ProtoMessage() {}

func (x *MultiGlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiGlobResponse.ProtoReflect.Descriptor instead.
func (*MultiGlobResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{10}
}

func (x *MultiGlobResponse) GetMetrics() []*GlobResponse {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Information about metrics
type MetricsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MetricsInfoRequest) Reset() {
	*x = MetricsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsInfoRequest) ProtoMessage() {}

func (x *MetricsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsInfoRequest.ProtoReflect.Descriptor instead.
func (*MetricsInfoRequest) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{11}
}

func (x *MetricsInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MultiMetricsInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *MultiMetricsInfoRequest) Reset() {
	*x = MultiMetricsInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiMetricsInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMetricsInfoRequest) ProtoMessage() {}

func (x *MultiMetricsInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMetricsInfoRequest.ProtoReflect.Descriptor instead.
func (*MultiMetricsInfoRequest) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{12}
}

func (x *MultiMetricsInfoRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Retention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecondsPerPoint int64 `protobuf:"varint,1,opt,name=secondsPerPoint,proto3" json:"secondsPerPoint,omitempty"`
	NumberOfPoints  int64 `protobuf:"varint,2,opt,name=numberOfPoints,proto3" json:"numberOfPoints,omitempty"`
}

func (x *Retention) Reset() {
	*x = Retention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Retention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Retention) ProtoMessage() {}

func (x *Retention) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Retention.ProtoReflect.Descriptor instead.
func (*Retention) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{13}
}

func (x *Retention) GetSecondsPerPoint() int64 {
	if x != nil {
		return x.SecondsPerPoint
	}
	return 0
}

func (x *Retention) GetNumberOfPoints() int64 {
	if x != nil {
		return x.NumberOfPoints
	}
	return 0
}

type MetricsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ConsolidationFunc string       `protobuf:"bytes,2,opt,name=consolidationFunc,proto3" json:"consolidationFunc,omitempty"`
	XFilesFactor      float32      `protobuf:"fixed32,4,opt,name=xFilesFactor,proto3" json:"xFilesFactor,omitempty"`
	MaxRetention      int64        `protobuf:"varint,3,opt,name=maxRetention,proto3" json:"maxRetention,omitempty"`
	Retentions        []*Retention `protobuf:"bytes,5,rep,name=retentions,proto3" json:"retentions,omitempty"`
}

func (x *MetricsInfoResponse) Reset() {
	*x = MetricsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsInfoResponse) ProtoMessage() {}

func (x *MetricsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsInfoResponse.ProtoReflect.Descriptor instead.
func (*MetricsInfoResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{14}
}

func (x *MetricsInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricsInfoResponse) GetConsolidationFunc() string {
	if x != nil {
		return x.ConsolidationFunc
	}
	return ""
}

func (x *MetricsInfoResponse) GetXFilesFactor() float32 {
	if x != nil {
		return x.XFilesFactor
	}
	return 0
}

func (x *MetricsInfoResponse) GetMaxRetention() int64 {
	if x != nil {
		return x.MaxRetention
	}
	return 0
}

func (x *MetricsInfoResponse) GetRetentions() []*Retention {
	if x != nil {
		return x.Retentions
	}
	return nil
}

type MultiMetricsInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*MetricsInfoResponse `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *MultiMetricsInfoResponse) Reset() {
	*x = MultiMetricsInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiMetricsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMetricsInfoResponse) ProtoMessage() {}

func (x *MultiMetricsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMetricsInfoResponse.ProtoReflect.Descriptor instead.
func (*MultiMetricsInfoResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{15}
}

func (x *MultiMetricsInfoResponse) GetMetrics() []*MetricsInfoResponse {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// key = server, value = metric
type ZipperInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info map[string]*MultiMetricsInfoResponse `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ZipperInfoResponse) Reset() {
	*x = ZipperInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZipperInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZipperInfoResponse) ProtoMessage() {}

func (x *ZipperInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZipperInfoResponse.ProtoReflect.Descriptor instead.
func (*ZipperInfoResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{16}
}

func (x *ZipperInfoResponse) GetInfo() map[string]*MultiMetricsInfoResponse {
	if x != nil {
		return x.Info
	}
	return nil
}

// List all metrics
type ListMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []string `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"`
}

func (x *ListMetricsResponse) Reset() {
	*x = ListMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetricsResponse) ProtoMessage() {}

func (x *ListMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListMetricsResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{17}
}

func (x *ListMetricsResponse) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Get stats about metrics
type MetricDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     int64 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	ModTime  int64 `protobuf:"varint,3,opt,name=ModTime,proto3" json:"ModTime,omitempty"`
	ATime    int64 `protobuf:"varint,4,opt,name=ATime,proto3" json:"ATime,omitempty"`
	RdTime   int64 `protobuf:"varint,5,opt,name=RdTime,proto3" json:"RdTime,omitempty"`
	RealSize int64 `protobuf:"varint,6,opt,name=RealSize,proto3" json:"RealSize,omitempty"`
}

func (x *MetricDetails) Reset() {
	*x = MetricDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDetails) ProtoMessage() {}

func (x *MetricDetails) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDetails.ProtoReflect.Descriptor instead.
func (*MetricDetails) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{18}
}

func (x *MetricDetails) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MetricDetails) GetModTime() int64 {
	if x != nil {
		return x.ModTime
	}
	return 0
}

func (x *MetricDetails) GetATime() int64 {
	if x != nil {
		return x.ATime
	}
	return 0
}

func (x *MetricDetails) GetRdTime() int64 {
	if x != nil {
		return x.RdTime
	}
	return 0
}

func (x *MetricDetails) GetRealSize() int64 {
	if x != nil {
		return x.RealSize
	}
	return 0
}

type MetricDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics    map[string]*MetricDetails `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FreeSpace  uint64                    `protobuf:"varint,2,opt,name=FreeSpace,proto3" json:"FreeSpace,omitempty"`
	TotalSpace uint64                    `protobuf:"varint,3,opt,name=TotalSpace,proto3" json:"TotalSpace,omitempty"`
}

func (x *MetricDetailsResponse) Reset() {
	*x = MetricDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDetailsResponse) ProtoMessage() {}

func (x *MetricDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDetailsResponse.ProtoReflect.Descriptor instead.
func (*MetricDetailsResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{19}
}

func (x *MetricDetailsResponse) GetMetrics() map[string]*MetricDetails {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MetricDetailsResponse) GetFreeSpace() uint64 {
	if x != nil {
		return x.FreeSpace
	}
	return 0
}

func (x *MetricDetailsResponse) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

type MultiDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics map[string]*MetricDetailsResponse `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MultiDetailsResponse) Reset() {
	*x = MultiDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiDetailsResponse) ProtoMessage() {}

func (x *MultiDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiDetailsResponse.ProtoReflect.Descriptor instead.
func (*MultiDetailsResponse) Descriptor() ([]byte, []int) {
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP(), []int{20}
}

func (x *MultiDetailsResponse) GetMetrics() map[string]*MetricDetailsResponse {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_carbonapi_v3_pb_carbonapi_v3_pb_proto protoreflect.FileDescriptor

var file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDesc = []byte{
	0x0a, 0x25, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70,
	0x62, 0x2f, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x22, 0x45, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x13, 0x0a, 0x11, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xb0, 0x02, 0x0a, 0x12, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x17, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x6c, 0x69, 0x6b, 0x65, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6c, 0x69, 0x6b, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xb2, 0x02, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74,
	0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x74, 0x68, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33,
	0x5f, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d,
	0x61, 0x78, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x11,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x33, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xc7, 0x03, 0x0a, 0x0d, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x74, 0x68, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x38, 0x0a, 0x17, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x17, 0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61,
	0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x22, 0x66, 0x0a, 0x10, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x6c, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x09,
	0x47, 0x6c, 0x6f, 0x62, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4c, 0x65, 0x61, 0x66, 0x22, 0x58, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x72,
	0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22,
	0x4c, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70,
	0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x28, 0x0a,
	0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x17, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x09, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x50, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e,
	0x63, 0x12, 0x22, 0x0a, 0x0c, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x78, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x72, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x33, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x5a, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x5a, 0x69, 0x70, 0x70, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x62, 0x0a, 0x09, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x2f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x22, 0x87, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x41, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x52, 0x65, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x15, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70,
	0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x46, 0x72, 0x65, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x1a, 0x5a, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x33, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc8, 0x01,
	0x0a, 0x14, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e,
	0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x1a, 0x62, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x61, 0x70,
	0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescOnce sync.Once
	file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescData = file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDesc
)

func file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescGZIP() []byte {
	file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescOnce.Do(func() {
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescData)
	})
	return file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDescData
}

var file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_carbonapi_v3_pb_carbonapi_v3_pb_proto_goTypes = []interface{}{
	(*FilteringFunction)(nil),        // 0: carbonapi_v3_pb.FilteringFunction
	(*CapabilityRequest)(nil),        // 1: carbonapi_v3_pb.CapabilityRequest
	(*CapabilityResponse)(nil),       // 2: carbonapi_v3_pb.CapabilityResponse
	(*FetchRequest)(nil),             // 3: carbonapi_v3_pb.FetchRequest
	(*MultiFetchRequest)(nil),        // 4: carbonapi_v3_pb.MultiFetchRequest
	(*FetchResponse)(nil),            // 5: carbonapi_v3_pb.FetchResponse
	(*MultiFetchResponse)(nil),       // 6: carbonapi_v3_pb.MultiFetchResponse
	(*MultiGlobRequest)(nil),         // 7: carbonapi_v3_pb.MultiGlobRequest
	(*GlobMatch)(nil),                // 8: carbonapi_v3_pb.GlobMatch
	(*GlobResponse)(nil),             // 9: carbonapi_v3_pb.GlobResponse
	(*MultiGlobResponse)(nil),        // 10: carbonapi_v3_pb.MultiGlobResponse
	(*MetricsInfoRequest)(nil),       // 11: carbonapi_v3_pb.MetricsInfoRequest
	(*MultiMetricsInfoRequest)(nil),  // 12: carbonapi_v3_pb.MultiMetricsInfoRequest
	(*Retention)(nil),                // 13: carbonapi_v3_pb.Retention
	(*MetricsInfoResponse)(nil),      // 14: carbonapi_v3_pb.MetricsInfoResponse
	(*MultiMetricsInfoResponse)(nil), // 15: carbonapi_v3_pb.MultiMetricsInfoResponse
	(*ZipperInfoResponse)(nil),       // 16: carbonapi_v3_pb.ZipperInfoResponse
	(*ListMetricsResponse)(nil),      // 17: carbonapi_v3_pb.ListMetricsResponse
	(*MetricDetails)(nil),            // 18: carbonapi_v3_pb.MetricDetails
	(*MetricDetailsResponse)(nil),    // 19: carbonapi_v3_pb.MetricDetailsResponse
	(*MultiDetailsResponse)(nil),     // 20: carbonapi_v3_pb.MultiDetailsResponse
	nil,                              // 21: carbonapi_v3_pb.ZipperInfoResponse.InfoEntry
	nil,                              // 22: carbonapi_v3_pb.MetricDetailsResponse.MetricsEntry
	nil,                              // 23: carbonapi_v3_pb.MultiDetailsResponse.MetricsEntry
}
var file_carbonapi_v3_pb_carbonapi_v3_pb_proto_depIdxs = []int32{
	0,  // 0: carbonapi_v3_pb.FetchRequest.filterFunctions:type_name -> carbonapi_v3_pb.FilteringFunction
	3,  // 1: carbonapi_v3_pb.MultiFetchRequest.metrics:type_name -> carbonapi_v3_pb.FetchRequest
	5,  // 2: carbonapi_v3_pb.MultiFetchResponse.metrics:type_name -> carbonapi_v3_pb.FetchResponse
	8,  // 3: carbonapi_v3_pb.GlobResponse.matches:type_name -> carbonapi_v3_pb.GlobMatch
	9,  // 4: carbonapi_v3_pb.MultiGlobResponse.metrics:type_name -> carbonapi_v3_pb.GlobResponse
	13, // 5: carbonapi_v3_pb.MetricsInfoResponse.retentions:type_name -> carbonapi_v3_pb.Retention
	14, // 6: carbonapi_v3_pb.MultiMetricsInfoResponse.metrics:type_name -> carbonapi_v3_pb.MetricsInfoResponse
	21, // 7: carbonapi_v3_pb.ZipperInfoResponse.info:type_name -> carbonapi_v3_pb.ZipperInfoResponse.InfoEntry
	22, // 8: carbonapi_v3_pb.MetricDetailsResponse.metrics:type_name -> carbonapi_v3_pb.MetricDetailsResponse.MetricsEntry
	23, // 9: carbonapi_v3_pb.MultiDetailsResponse.metrics:type_name -> carbonapi_v3_pb.MultiDetailsResponse.MetricsEntry
	15, // 10: carbonapi_v3_pb.ZipperInfoResponse.InfoEntry.value:type_name -> carbonapi_v3_pb.MultiMetricsInfoResponse
	18, // 11: carbonapi_v3_pb.MetricDetailsResponse.MetricsEntry.value:type_name -> carbonapi_v3_pb.MetricDetails
	19, // 12: carbonapi_v3_pb.MultiDetailsResponse.MetricsEntry.value:type_name -> carbonapi_v3_pb.MetricDetailsResponse
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_carbonapi_v3_pb_carbonapi_v3_pb_proto_init() }
func file_carbonapi_v3_pb_carbonapi_v3_pb_proto_init() {
	if File_carbonapi_v3_pb_carbonapi_v3_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilteringFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGlobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiGlobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiMetricsInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Retention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiMetricsInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZipperInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_carbonapi_v3_pb_carbonapi_v3_pb_proto_goTypes,
		DependencyIndexes: file_carbonapi_v3_pb_carbonapi_v3_pb_proto_depIdxs,
		MessageInfos:      file_carbonapi_v3_pb_carbonapi_v3_pb_proto_msgTypes,
	}.Build()
	File_carbonapi_v3_pb_carbonapi_v3_pb_proto = out.File
	file_carbonapi_v3_pb_carbonapi_v3_pb_proto_rawDesc = nil
	file_carbonapi_v3_pb_carbonapi_v3_pb_proto_goTypes = nil
	file_carbonapi_v3_pb_carbonapi_v3_pb_proto_depIdxs = nil
}
